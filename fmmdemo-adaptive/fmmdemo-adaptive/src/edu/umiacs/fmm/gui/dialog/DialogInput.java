/*
 * DialogInput.java
 *
 * Created on November 19, 2004, 2:34 PM
 */

package edu.umiacs.fmm.gui.dialog;
import edu.umiacs.fmm.*;
import java.util.*;
/**
 *
 * @author  wpwy
 */
public class DialogInput extends javax.swing.JDialog {
    
    Vector<Point> x = new Vector<Point>();
    Vector<Point> y = new Vector<Point>();
    Vector<Double> u = new Vector<Double>();
    
    public DialogInput(){
        super();
        initComponents();
    }
    /** Creates new form DialogInput */
    public DialogInput(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public Vector<Point> getSource(){
        return x;
    }
    public void setSource(Vector<Point> x){
        this.x=x;
        this.jTextAreaSource.setText(getSourceString());
    }
    public Vector<Point> getTarget(){
        return y;
    }
    public void setTarget(Vector<Point> y){
        this.y=y;
        this.jTextAreaTarget.setText(getTargetString());
    }
    public Vector<Double> getU(){
        return u;
    }
    public void setU(Vector<Double> u){
        this.u=u;
        this.jTextAreaPointCharge.setText(getUString());
    }
    public void setU(double[] u){
        this.u = new Vector<Double>();
        for (double pu:u)
            this.u.addElement(pu);
        this.jTextAreaPointCharge.setText(getUString());
    }
    public String getSourceString(){
        StringBuffer sb = new StringBuffer();
        for (Point px : x){
            sb.append(px.getCoord().real()+" "+px.getCoord().imaginary()+"\n");
        }
        return sb.toString();
    }
    public String getTargetString(){
        StringBuffer sb = new StringBuffer();
        for (Point py : y){
            sb.append(py.getCoord().real()+" "+py.getCoord().imaginary()+"\n");
        }
        return sb.toString();
    }
    public String getUString(){
        StringBuffer sb = new StringBuffer();
        for (double pu : u){
            sb.append(pu+"\n");
        }
        return sb.toString();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanelMain = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaSource = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaTarget = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaPointCharge = new javax.swing.JTextArea();
        jPanelSouth = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jPanelNorth = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Import/Export");
        setLocationByPlatform(true);
        setModal(true);
        jPanelMain.setLayout(new javax.swing.BoxLayout(jPanelMain, javax.swing.BoxLayout.Y_AXIS));

        jPanelMain.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5)));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel3.setText("<html>\nSource Points (X) \n<html>");
        jLabel3.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 0, 0, 0)));
        jPanel3.add(jLabel3, java.awt.BorderLayout.NORTH);

        jTextAreaSource.setLineWrap(true);
        jTextAreaSource.setRows(6);
        jTextAreaSource.setText(getSourceString());
        jScrollPane3.setViewportView(jTextAreaSource);

        jPanel3.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jPanelMain.add(jPanel3);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel2.setText("<html>\nTarget Points (Y) \n<html>");
        jLabel2.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 0, 0, 0)));
        jPanel2.add(jLabel2, java.awt.BorderLayout.NORTH);

        jTextAreaTarget.setLineWrap(true);
        jTextAreaTarget.setRows(6);
        jTextAreaTarget.setText(getTargetString());
        jScrollPane2.setViewportView(jTextAreaTarget);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanelMain.add(jPanel2);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel1.setText("<html>\nPoint Charge (u)\n</html>");
        jLabel1.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 0, 0, 0)));
        jPanel1.add(jLabel1, java.awt.BorderLayout.NORTH);

        jTextAreaPointCharge.setLineWrap(true);
        jTextAreaPointCharge.setRows(6);
        jTextAreaPointCharge.setText(getUString());
        jScrollPane1.setViewportView(jTextAreaPointCharge);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanelMain.add(jPanel1);

        getContentPane().add(jPanelMain, java.awt.BorderLayout.CENTER);

        jPanelSouth.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButtonOK.setFont(new java.awt.Font("Dialog", 0, 12));
        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jPanelSouth.add(jButtonOK);

        jButtonCancel.setFont(new java.awt.Font("Dialog", 0, 12));
        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jPanelSouth.add(jButtonCancel);

        getContentPane().add(jPanelSouth, java.awt.BorderLayout.SOUTH);

        jPanelNorth.setLayout(new javax.swing.BoxLayout(jPanelNorth, javax.swing.BoxLayout.Y_AXIS));

        jPanelNorth.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5)));
        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12));
        jLabel4.setText("<html>\nCopying/Pasting data:<br>\n<ul>\n<li>For points, enter one point on each line in the following format:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<I>xcord&nbsp;&nbsp;ycord</I><br>\nBoth coordinates must be between 0 and 1 since the points should be in the unit square.<br>&nbsp;\n</li>\n<li>For point charge (u), enter one floating point value on each line.</li>\n</ul>\n<html>");
        jLabel4.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(0, 0, 5, 0)));
        jPanelNorth.add(jLabel4);

        jPanelNorth.add(jSeparator1);

        jLabel5.setText("  ");
        jPanelNorth.add(jLabel5);

        getContentPane().add(jPanelNorth, java.awt.BorderLayout.NORTH);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents
    
    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        // TODO add your handling code here:
        jButtonOKActionPerformedHelper(evt);
        
    }//GEN-LAST:event_jButtonOKActionPerformed
    
    private void jButtonOKActionPerformedHelper(java.awt.event.ActionEvent evt){
        try {
            try {setSource(parsePoints(this.jTextAreaSource));}
            catch (Exception e){throw new Exception("Error parsing source points. \n"+e.getMessage());}   
            try { setTarget(parsePoints(this.jTextAreaTarget));}
            catch (Exception e){throw new Exception("Error parsing target points. \n"+e.getMessage());}
            try {setU( parseDoubles(this.jTextAreaPointCharge));}
            catch (Exception e){throw new Exception("Error parsing point charges. \n"+e.getMessage());}
            fireActionListenerActionPerformed(evt);
            setVisible(false);
        }
        catch (Exception e){
            //e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    
    private Vector<Double> parseDoubles(javax.swing.JTextArea jta){
        Vector<Double> ans = new Vector<Double>();
        if (jta==null || jta.getText().trim().equals(""))
            return ans;
        String text = jta.getText().trim();
        StringTokenizer ts = new StringTokenizer(text);
        while(ts.hasMoreTokens()){
            double u = Double.parseDouble(ts.nextToken());
            ans.addElement(u);
        }
        return ans;
    }
    private Vector<Point> parsePoints(javax.swing.JTextArea jta){
        Vector<Point> ans = new Vector<Point>();
        if (jta==null || jta.getText().trim().equals(""))
            return ans;
        String text = jta.getText().trim();
        StringTokenizer ts = new StringTokenizer(text);
        while(ts.hasMoreTokens()){
            double xcord = Double.parseDouble(ts.nextToken());
            double ycord = Double.parseDouble(ts.nextToken());
            Point p = new Point(xcord, ycord);
            ans.addElement(p);
        }
        return ans;
    }
    
    
    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DialogInput(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    /**
     * Registers ActionListener to receive events.
     * @param listener The listener to register.
     */
    public synchronized void addActionListener(java.awt.event.ActionListener listener) {
        
        if (listenerList == null ) {
            listenerList = new javax.swing.event.EventListenerList();
        }
        listenerList.add(java.awt.event.ActionListener.class, listener);
    }
    
    /**
     * Removes ActionListener from the list of listeners.
     * @param listener The listener to remove.
     */
    public synchronized void removeActionListener(java.awt.event.ActionListener listener) {
        
        listenerList.remove(java.awt.event.ActionListener.class, listener);
    }
    
    /**
     * Notifies all registered listeners about the event.
     *
     * @param event The event to be fired
     */
    private void fireActionListenerActionPerformed(java.awt.event.ActionEvent event) {
        
        if (listenerList == null) return;
        Object[] listeners = listenerList.getListenerList();
        for (int i = listeners.length-2; i>=0; i-=2) {
            if (listeners[i]==java.awt.event.ActionListener.class) {
                ((java.awt.event.ActionListener)listeners[i+1]).actionPerformed(event);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JPanel jPanelNorth;
    private javax.swing.JPanel jPanelSouth;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextAreaPointCharge;
    private javax.swing.JTextArea jTextAreaSource;
    private javax.swing.JTextArea jTextAreaTarget;
    // End of variables declaration//GEN-END:variables
    
    javax.swing.event.EventListenerList listenerList = new javax.swing.event.EventListenerList();
}
