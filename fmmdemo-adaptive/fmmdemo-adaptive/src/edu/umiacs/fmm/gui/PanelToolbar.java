/*
 * PanelToolbar.java
 *
 * Created on November 5, 2004, 1:57 PM
 */

package edu.umiacs.fmm.gui;
import javax.swing.*;
/**
 *
 * @author  wpwy
 */
public class PanelToolbar extends javax.swing.JPanel {
    
    /** Creates new form PanelToolbar */
    public PanelToolbar() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        tb1 = new javax.swing.JToolBar();
        btnGenerate = new javax.swing.JButton();
        btnClick = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        btnSettings = new javax.swing.JButton();
        tb2 = new javax.swing.JToolBar();
        btnStop = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        btnFF = new javax.swing.JButton();
        btnFFEnd = new javax.swing.JButton();
        tb3 = new javax.swing.JToolBar();
        btnCForest = new javax.swing.JButton();
        btnDtree = new javax.swing.JButton();

        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        tb1.setRollover(true);
        btnGenerate.setFont(new java.awt.Font("Dialog", 0, 10));
        btnGenerate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/umiacs/fmm/gui/resources/New16.gif")));
        btnGenerate.setToolTipText("Auto-generate data");
        btnGenerate.setActionCommand("generate");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        tb1.add(btnGenerate);

        btnClick.setFont(new java.awt.Font("Dialog", 0, 10));
        btnClick.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/umiacs/fmm/gui/resources/Edit16.gif")));
        btnClick.setToolTipText("Enter data manually");
        btnClick.setActionCommand("click");
        btnClick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClickActionPerformed(evt);
            }
        });

        tb1.add(btnClick);

        btnImport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/umiacs/fmm/gui/resources/Import16.gif")));
        btnImport.setToolTipText("Import/Export data");
        btnImport.setActionCommand("import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        tb1.add(btnImport);

        btnSettings.setFont(new java.awt.Font("Dialog", 0, 10));
        btnSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/umiacs/fmm/gui/resources/Preferences16.gif")));
        btnSettings.setToolTipText("Settings");
        btnSettings.setActionCommand("properties");
        btnSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettingsActionPerformed(evt);
            }
        });

        tb1.add(btnSettings);

        add(tb1);

        tb2.setRollover(true);
        btnStop.setFont(new java.awt.Font("Dialog", 0, 10));
        btnStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/umiacs/fmm/gui/resources/Stop16.gif")));
        btnStop.setToolTipText("Stop");
        btnStop.setActionCommand("stop");
        btnStop.setEnabled(false);
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        tb2.add(btnStop);

        btnStart.setFont(new java.awt.Font("Dialog", 0, 10));
        btnStart.setIcon(getPlayIcon());
        btnStart.setToolTipText("Start FMM Solver");
        btnStart.setActionCommand("start");
        btnStart.setEnabled(false);
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        tb2.add(btnStart);

        btnFF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/umiacs/fmm/gui/resources/FastForward16.gif")));
        btnFF.setToolTipText("Fast Forward");
        btnFF.setActionCommand("ff");
        btnFF.setEnabled(false);
        btnFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFFActionPerformed(evt);
            }
        });

        tb2.add(btnFF);

        btnFFEnd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/umiacs/fmm/gui/resources/FastForwardEnd16.gif")));
        btnFFEnd.setToolTipText("Fast Forward to End of Step");
        btnFFEnd.setActionCommand("ff2end");
        btnFFEnd.setEnabled(false);
        btnFFEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFFEndActionPerformed(evt);
            }
        });

        tb2.add(btnFFEnd);

        add(tb2);

        btnCForest.setFont(new java.awt.Font("Dialog", 0, 10));
        btnCForest.setText("c-forest");
        btnCForest.setEnabled(false);
        btnCForest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCForestActionPerformed(evt);
            }
        });

        tb3.add(btnCForest);

        btnDtree.setFont(new java.awt.Font("Dialog", 0, 10));
        btnDtree.setText("d-tree");
        btnDtree.setEnabled(false);
        btnDtree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDtreeActionPerformed(evt);
            }
        });

        tb3.add(btnDtree);

        add(tb3);

    }
    // </editor-fold>//GEN-END:initComponents

    private void btnClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClickActionPerformed
// TODO add your handling code here:
        this.fireActionListenerActionPerformed(evt);
    }//GEN-LAST:event_btnClickActionPerformed

    public void setBtnCForestEnabled(boolean b){
        this.btnCForest.setEnabled(b);
    }
    public void setBtnDTreeEnabled(boolean b){
        this.btnDtree.setEnabled(b);
    }
    private void btnCForestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCForestActionPerformed
// TODO add your handling code here:
        
        this.btnDtree.setEnabled(true);
        this.btnCForest.setEnabled(false);
        this.fireActionListenerActionPerformed(evt);
    }//GEN-LAST:event_btnCForestActionPerformed

    private void btnDtreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDtreeActionPerformed
// TODO add your handling code here:
        this.btnDtree.setEnabled(false);
        this.btnCForest.setEnabled(true);
        this.fireActionListenerActionPerformed(evt);
    }//GEN-LAST:event_btnDtreeActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
        this.fireActionListenerActionPerformed(evt);
    }//GEN-LAST:event_btnImportActionPerformed
    
    private void btnFFEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFFEndActionPerformed
        // TODO add your handling code here:
        this.btnStart.setIcon(this.playIcon);
        this.btnStart.setToolTipText("Resume");
        this.btnStart.setActionCommand("resume");
        this.fireActionListenerActionPerformed(evt);
    }//GEN-LAST:event_btnFFEndActionPerformed
    
    private void btnFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFFActionPerformed
        // TODO add your handling code here:
        this.fireActionListenerActionPerformed(evt);
    }//GEN-LAST:event_btnFFActionPerformed
    
    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        // TODO add your handling code here:
        
        this.btnStart.setEnabled(true);
        this.btnStop.setEnabled(false);
        this.fireActionListenerActionPerformed(evt);
    }//GEN-LAST:event_btnStopActionPerformed
    
    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
        if (this.btnStart.getIcon()==this.playIcon){
            this.btnStart.setIcon(this.pauseIcon);
            this.btnStart.setToolTipText("Pause");
            this.btnStart.setActionCommand("pause");
        }
        else {
            this.btnStart.setIcon(this.playIcon);
            this.btnStart.setToolTipText("Resume");
            this.btnStart.setActionCommand("resume");
        }
        this.btnStop.setEnabled(true);
        this.btnFF.setEnabled(true);
        this.btnFFEnd.setEnabled(true);
        this.fireActionListenerActionPerformed(evt);
    }//GEN-LAST:event_btnStartActionPerformed
    
    private void btnSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettingsActionPerformed
        // TODO add your handling code here:
        this.fireActionListenerActionPerformed(evt);
    }//GEN-LAST:event_btnSettingsActionPerformed
    
    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        // TODO add your handling code here:
        this.btnStart.setEnabled(true);
        this.btnStart.setIcon(playIcon);
        this.btnStart.setToolTipText("Start");
        this.btnStart.setActionCommand("start");
        this.btnStop.setEnabled(false);
        //this.btnPause.setEnabled(false);
        this.btnCForest.setEnabled(false);
        this.btnDtree.setEnabled(true);
        this.fireActionListenerActionPerformed(evt);
        
    }//GEN-LAST:event_btnGenerateActionPerformed
    
    /**
     * Registers ActionListener to receive events.
     * @param listener The listener to register.
     */
    public synchronized void addActionListener(java.awt.event.ActionListener listener) {
        
        if (listenerList == null ) {
            listenerList = new javax.swing.event.EventListenerList();
        }
        listenerList.add(java.awt.event.ActionListener.class, listener);
    }
    
    /**
     * Removes ActionListener from the list of listeners.
     * @param listener The listener to remove.
     */
    public synchronized void removeActionListener(java.awt.event.ActionListener listener) {
        
        listenerList.remove(java.awt.event.ActionListener.class, listener);
    }
    
    /**
     * Notifies all registered listeners about the event.
     *
     * @param event The event to be fired
     */
    private void fireActionListenerActionPerformed(java.awt.event.ActionEvent event) {
        
        if (listenerList == null) return;
        Object[] listeners = listenerList.getListenerList();
        for (int i = listeners.length-2; i>=0; i-=2) {
            if (listeners[i]==java.awt.event.ActionListener.class) {
                ((java.awt.event.ActionListener)listeners[i+1]).actionPerformed(event);
            }
        }
    }
    
    /**
     * Registers ChangeListener to receive events.
     * @param listener The listener to register.
     */
    public synchronized void addChangeListener(javax.swing.event.ChangeListener listener) {
        
        if (listenerList == null ) {
            listenerList = new javax.swing.event.EventListenerList();
        }
        listenerList.add(javax.swing.event.ChangeListener.class, listener);
    }
    
    /**
     * Removes ChangeListener from the list of listeners.
     * @param listener The listener to remove.
     */
    public synchronized void removeChangeListener(javax.swing.event.ChangeListener listener) {
        
        listenerList.remove(javax.swing.event.ChangeListener.class, listener);
    }
    
    /**
     * Notifies all registered listeners about the event.
     *
     * @param event The event to be fired
     */
    private void fireChangeListenerStateChanged(javax.swing.event.ChangeEvent event) {
        
        if (listenerList == null) return;
        Object[] listeners = listenerList.getListenerList();
        for (int i = listeners.length-2; i>=0; i-=2) {
            if (listeners[i]==javax.swing.event.ChangeListener.class) {
                ((javax.swing.event.ChangeListener)listeners[i+1]).stateChanged(event);
            }
        }
    }
    /**
     * Getter for property btnStart.
     * @return Value of property btnStart.
     */
    public JButton getBtnFFEnd() {
        
        return this.btnFFEnd;
    }
    
    /**
     * Setter for property btnStart.
     * @param btnStart New value of property btnStart.
     */
    public void setBtnFFEnd(JButton btnFFEndEnd) {
        
        this.btnFFEnd = btnFF;
    }
    /**
     * Getter for property btnStart.
     * @return Value of property btnStart.
     */
    public JButton getBtnFF() {
        
        return this.btnFF;
    }
    
    /**
     * Setter for property btnStart.
     * @param btnStart New value of property btnStart.
     */
    public void setBtnFF(JButton btnFF) {
        
        this.btnFF = btnFF;
    }
    /**
     * Getter for property btnStart.
     * @return Value of property btnStart.
     */
    public JButton getBtnStart() {
        
        return this.btnStart;
    }
    
    /**
     * Setter for property btnStart.
     * @param btnStart New value of property btnStart.
     */
    public void setBtnStart(JButton btnStart) {
        
        this.btnStart = btnStart;
    }
    
    /**
     * Getter for property btnStop.
     * @return Value of property btnStop.
     */
    public JButton getBtnStop() {
        
        return this.btnStop;
    }
    
    /**
     * Setter for property btnStop.
     * @param btnStop New value of property btnStop.
     */
    public void setBtnStop(JButton btnStop) {
        
        this.btnStop = btnStop;
    }
    
    public ImageIcon getPlayIcon(){
        return playIcon;
    }
    public ImageIcon getPauseIcon(){
        return pauseIcon;
    }
    public void setPlayIcon(ImageIcon icon){
        playIcon = icon;
    }
    public void setPauseIcon(ImageIcon icon){
        pauseIcon = icon;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCForest;
    private javax.swing.JButton btnClick;
    private javax.swing.JButton btnDtree;
    private javax.swing.JButton btnFF;
    private javax.swing.JButton btnFFEnd;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnSettings;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.JToolBar tb1;
    private javax.swing.JToolBar tb2;
    private javax.swing.JToolBar tb3;
    // End of variables declaration//GEN-END:variables
    
    private javax.swing.event.EventListenerList listenerList;
    private ImageIcon playIcon = Constants.ICON_PLAY;//new javax.swing.ImageIcon(getClass().getResource("/edu/umiacs/fmm/gui/resources/execute16.gif"));
    private ImageIcon pauseIcon = new javax.swing.ImageIcon(getClass().getResource("/edu/umiacs/fmm/gui/resources/Pause16.gif"));

    /**
     * Getter for property btnDtree.
     * @return Value of property btnDtree.
     */
    public javax.swing.JButton getBtnDtree() {

        return this.btnDtree;
    }

    /**
     * Setter for property btnDtree.
     * @param btnDtree New value of property btnDtree.
     */
    public void setBtnDtree(javax.swing.JButton btnDtree) {

        this.btnDtree = btnDtree;
    }

    /**
     * Getter for property btnCForest.
     * @return Value of property btnCForest.
     */
    public javax.swing.JButton getBtnCForest() {

        return this.btnCForest;
    }

    /**
     * Setter for property btnCForest.
     * @param btnCForest New value of property btnCForest.
     */
    public void setBtnCForest(javax.swing.JButton btnCForest) {

        this.btnCForest = btnCForest;
    }
}
