/*
 * Points.java
 *
 * Created on November 18, 2003, 8:43 AM
 */

package edu.umiacs.fmm.gui;
import edu.umiacs.fmm.Point;
import java.awt.*;
import java.awt.event.*;
import java.awt.geom.*;
import javax.swing.*;
/**
 *
 * @author  wpwy
 */
public class LayerPoints extends javax.swing.JPanel implements java.io.Serializable{
    edu.umiacs.fmm.Point[] points;
    Color c;
    int proportion=Constants.ANIM_PROPORTION; 
    /** Creates new form Points */
    public LayerPoints() {
        initComponents();
    }
    public Color getColor() {
        return c;
    }
    public void setColor(Color c) {
        this.c=c;
    }
    public edu.umiacs.fmm.Point[] getPoints(){
        return points;
    }
    public void setPoints(edu.umiacs.fmm.Point[] points) {
        this.points=points;
    }
    public void setPoints(java.util.Vector<Point> pv){
        points = pv.toArray(new Point[0]);
    }
    public int getProportion() {
        return proportion;
    }
    public void setProportion(int p) {
        proportion = p;
        setSize(p, p);
        this.setPreferredSize(new Dimension(p, p));
        repaint();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(512, 512));
    }
    // </editor-fold>//GEN-END:initComponents
    public void paintComponent(Graphics g) {
        //this.setPreferredSize(new Dimension(proportion,proportion));
        //System.out.println("painting layer with color "+c);
        Graphics2D g2 = (Graphics2D) g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        //g2.clearRect(0, 0, proportion, proportion);
        if (c!=null) g2.setPaint(c);
        if (points!=null && points.length>0){
            for (int i=0; i<points.length; i++) {
                g2.fillRect((int)(points[i].getCoord().real()*proportion), 
                proportion-(int)(points[i].getCoord().imaginary()*proportion), 2, 2);
                //System.out.println("painted a point "+points[i]+" prop: "+proportion);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
